Nonterminals useless in grammar

   TYPE_NAME
   CAST_EXPRESSION
   UNARY_EXPRESSION


Terminals unused in grammar

   EQUAL_TO
   NOT_EQUAL_TO
   LESS_THAN_EQUAL
   MORE_THAN_EQUAL
   AND
   OR
   LEFT_SHIFT
   RIGHT_SHIFT
   PLUS_EQUAL
   MINUS_EQUAL
   TIMES_EQUAL
   DIVIDE_EQUAL
   MOD_EQUAL
   LEFT_SHIFT_EQUAL
   RIGHT_SHIFT_EQUAL
   B_AND_EQUAL
   XOR_EQUAL
   B_OR_EQUAL
   AUTO
   BREAK
   CASE
   CHAR
   CONST
   CONTINUE
   DEFAULT
   DO
   DOUBLE
   ELSE
   ENUM
   FLOAT
   FOR
   GOTO
   IF
   INT
   LONG
   REGISTER
   RETURN
   SHORT
   SIGNED
   SIZEOF
   STATIC
   STRUCT
   SWITCH
   TYPEDEF
   UNION
   UNSIGNED
   VOID
   WHILE
   EXTERN
   VOLATILE
   TYPEDEF_T
   '&'
   '*'
   '+'
   '-'
   '~'
   '!'


Rules useless in grammar

   19 TYPE_NAME: IDENTIFIER

   20 CAST_EXPRESSION: UNARY_EXPRESSION
   21                | '(' TYPE_NAME ')' CAST_EXPRESSION

   22 UNARY_EXPRESSION: POSTFIX_EXPRESSION
   23                 | PLUSPLUS UNARY_EXPRESSION
   24                 | MINUSMINUS UNARY_EXPRESSION
   25                 | SIZEOF UNARY_EXPRESSION
   26                 | SIZEOF '(' TYPE_NAME ')'
   27                 | '&' CAST_EXPRESSION
   28                 | '*' CAST_EXPRESSION
   29                 | '+' CAST_EXPRESSION
   30                 | '-' CAST_EXPRESSION
   31                 | '~' CAST_EXPRESSION
   32                 | '!' CAST_EXPRESSION


Grammar

    0 $accept: ROOT $end

    1 ROOT: EXPRESSION

    2 EXPRESSION: ASSIGNMENT_EXPRESSION

    3 ARGUMENT_EXPRESSION_LIST: ASSIGNMENT_EXPRESSION
    4                         | ARGUMENT_EXPRESSION_LIST ',' ASSIGNMENT_EXPRESSION

    5 ASSIGNMENT_EXPRESSION: POSTFIX_EXPRESSION

    6 POSTFIX_EXPRESSION: PRIMARY_EXPRESSION
    7                   | POSTFIX_EXPRESSION '[' EXPRESSION ']'
    8                   | POSTFIX_EXPRESSION '(' ')'
    9                   | POSTFIX_EXPRESSION '(' ARGUMENT_EXPRESSION_LIST ')'
   10                   | POSTFIX_EXPRESSION '.' IDENTIFIER
   11                   | POSTFIX_EXPRESSION ARROW IDENTIFIER
   12                   | POSTFIX_EXPRESSION PLUSPLUS
   13                   | POSTFIX_EXPRESSION MINUSMINUS

   14 PRIMARY_EXPRESSION: IDENTIFIER
   15                   | NUMBER
   16                   | STRING_LITERAL
   17                   | '(' EXPRESSION ')'
   18                   | ENUM_VAL


Terminals, with rules where they appear

$end (0) 0
'!' (33)
'&' (38)
'(' (40) 8 9 17
')' (41) 8 9 17
'*' (42)
'+' (43)
',' (44) 4
'-' (45)
'.' (46) 10
'[' (91) 7
']' (93) 7
'~' (126)
error (256)
STRING_LITERAL (258) 16
PLUSPLUS (259) 12
MINUSMINUS (260) 13
EQUAL_TO (261)
NOT_EQUAL_TO (262)
LESS_THAN_EQUAL (263)
MORE_THAN_EQUAL (264)
AND (265)
OR (266)
LEFT_SHIFT (267)
RIGHT_SHIFT (268)
PLUS_EQUAL (269)
MINUS_EQUAL (270)
TIMES_EQUAL (271)
DIVIDE_EQUAL (272)
MOD_EQUAL (273)
LEFT_SHIFT_EQUAL (274)
RIGHT_SHIFT_EQUAL (275)
B_AND_EQUAL (276)
XOR_EQUAL (277)
B_OR_EQUAL (278)
ARROW (279) 11
AUTO (280)
BREAK (281)
CASE (282)
CHAR (283)
CONST (284)
CONTINUE (285)
DEFAULT (286)
DO (287)
DOUBLE (288)
ELSE (289)
ENUM (290)
ENUM_VAL (291) 18
FLOAT (292)
FOR (293)
GOTO (294)
IF (295)
INT (296)
LONG (297)
REGISTER (298)
RETURN (299)
SHORT (300)
SIGNED (301)
SIZEOF (302)
STATIC (303)
STRUCT (304)
SWITCH (305)
TYPEDEF (306)
UNION (307)
UNSIGNED (308)
VOID (309)
WHILE (310)
EXTERN (311)
VOLATILE (312)
NUMBER (313) 15
IDENTIFIER (314) 10 11 14
TYPEDEF_T (315)


Nonterminals, with rules where they appear

$accept (73)
    on left: 0
ROOT (74)
    on left: 1, on right: 0
EXPRESSION (75)
    on left: 2, on right: 1 7 17
ARGUMENT_EXPRESSION_LIST (76)
    on left: 3 4, on right: 4 9
ASSIGNMENT_EXPRESSION (77)
    on left: 5, on right: 2 3 4
POSTFIX_EXPRESSION (78)
    on left: 6 7 8 9 10 11 12 13, on right: 5 7 8 9 10 11 12 13
PRIMARY_EXPRESSION (79)
    on left: 14 15 16 17 18, on right: 6


State 0

    0 $accept: . ROOT $end

    STRING_LITERAL  shift, and go to state 1
    ENUM_VAL        shift, and go to state 2
    NUMBER          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    '('             shift, and go to state 5

    ROOT                   go to state 6
    EXPRESSION             go to state 7
    ASSIGNMENT_EXPRESSION  go to state 8
    POSTFIX_EXPRESSION     go to state 9
    PRIMARY_EXPRESSION     go to state 10


State 1

   16 PRIMARY_EXPRESSION: STRING_LITERAL .

    $default  reduce using rule 16 (PRIMARY_EXPRESSION)


State 2

   18 PRIMARY_EXPRESSION: ENUM_VAL .

    $default  reduce using rule 18 (PRIMARY_EXPRESSION)


State 3

   15 PRIMARY_EXPRESSION: NUMBER .

    $default  reduce using rule 15 (PRIMARY_EXPRESSION)


State 4

   14 PRIMARY_EXPRESSION: IDENTIFIER .

    $default  reduce using rule 14 (PRIMARY_EXPRESSION)


State 5

   17 PRIMARY_EXPRESSION: '(' . EXPRESSION ')'

    STRING_LITERAL  shift, and go to state 1
    ENUM_VAL        shift, and go to state 2
    NUMBER          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    '('             shift, and go to state 5

    EXPRESSION             go to state 11
    ASSIGNMENT_EXPRESSION  go to state 8
    POSTFIX_EXPRESSION     go to state 9
    PRIMARY_EXPRESSION     go to state 10


State 6

    0 $accept: ROOT . $end

    $end  shift, and go to state 12


State 7

    1 ROOT: EXPRESSION .

    $default  reduce using rule 1 (ROOT)


State 8

    2 EXPRESSION: ASSIGNMENT_EXPRESSION .

    $default  reduce using rule 2 (EXPRESSION)


State 9

    5 ASSIGNMENT_EXPRESSION: POSTFIX_EXPRESSION .
    7 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION . '[' EXPRESSION ']'
    8                   | POSTFIX_EXPRESSION . '(' ')'
    9                   | POSTFIX_EXPRESSION . '(' ARGUMENT_EXPRESSION_LIST ')'
   10                   | POSTFIX_EXPRESSION . '.' IDENTIFIER
   11                   | POSTFIX_EXPRESSION . ARROW IDENTIFIER
   12                   | POSTFIX_EXPRESSION . PLUSPLUS
   13                   | POSTFIX_EXPRESSION . MINUSMINUS

    PLUSPLUS    shift, and go to state 13
    MINUSMINUS  shift, and go to state 14
    ARROW       shift, and go to state 15
    '('         shift, and go to state 16
    '['         shift, and go to state 17
    '.'         shift, and go to state 18

    $default  reduce using rule 5 (ASSIGNMENT_EXPRESSION)


State 10

    6 POSTFIX_EXPRESSION: PRIMARY_EXPRESSION .

    $default  reduce using rule 6 (POSTFIX_EXPRESSION)


State 11

   17 PRIMARY_EXPRESSION: '(' EXPRESSION . ')'

    ')'  shift, and go to state 19


State 12

    0 $accept: ROOT $end .

    $default  accept


State 13

   12 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION PLUSPLUS .

    $default  reduce using rule 12 (POSTFIX_EXPRESSION)


State 14

   13 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION MINUSMINUS .

    $default  reduce using rule 13 (POSTFIX_EXPRESSION)


State 15

   11 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION ARROW . IDENTIFIER

    IDENTIFIER  shift, and go to state 20


State 16

    8 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION '(' . ')'
    9                   | POSTFIX_EXPRESSION '(' . ARGUMENT_EXPRESSION_LIST ')'

    STRING_LITERAL  shift, and go to state 1
    ENUM_VAL        shift, and go to state 2
    NUMBER          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    '('             shift, and go to state 5
    ')'             shift, and go to state 21

    ARGUMENT_EXPRESSION_LIST  go to state 22
    ASSIGNMENT_EXPRESSION     go to state 23
    POSTFIX_EXPRESSION        go to state 9
    PRIMARY_EXPRESSION        go to state 10


State 17

    7 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION '[' . EXPRESSION ']'

    STRING_LITERAL  shift, and go to state 1
    ENUM_VAL        shift, and go to state 2
    NUMBER          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    '('             shift, and go to state 5

    EXPRESSION             go to state 24
    ASSIGNMENT_EXPRESSION  go to state 8
    POSTFIX_EXPRESSION     go to state 9
    PRIMARY_EXPRESSION     go to state 10


State 18

   10 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 25


State 19

   17 PRIMARY_EXPRESSION: '(' EXPRESSION ')' .

    $default  reduce using rule 17 (PRIMARY_EXPRESSION)


State 20

   11 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION ARROW IDENTIFIER .

    $default  reduce using rule 11 (POSTFIX_EXPRESSION)


State 21

    8 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION '(' ')' .

    $default  reduce using rule 8 (POSTFIX_EXPRESSION)


State 22

    4 ARGUMENT_EXPRESSION_LIST: ARGUMENT_EXPRESSION_LIST . ',' ASSIGNMENT_EXPRESSION
    9 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION '(' ARGUMENT_EXPRESSION_LIST . ')'

    ','  shift, and go to state 26
    ')'  shift, and go to state 27


State 23

    3 ARGUMENT_EXPRESSION_LIST: ASSIGNMENT_EXPRESSION .

    $default  reduce using rule 3 (ARGUMENT_EXPRESSION_LIST)


State 24

    7 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION '[' EXPRESSION . ']'

    ']'  shift, and go to state 28


State 25

   10 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION '.' IDENTIFIER .

    $default  reduce using rule 10 (POSTFIX_EXPRESSION)


State 26

    4 ARGUMENT_EXPRESSION_LIST: ARGUMENT_EXPRESSION_LIST ',' . ASSIGNMENT_EXPRESSION

    STRING_LITERAL  shift, and go to state 1
    ENUM_VAL        shift, and go to state 2
    NUMBER          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    '('             shift, and go to state 5

    ASSIGNMENT_EXPRESSION  go to state 29
    POSTFIX_EXPRESSION     go to state 9
    PRIMARY_EXPRESSION     go to state 10


State 27

    9 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION '(' ARGUMENT_EXPRESSION_LIST ')' .

    $default  reduce using rule 9 (POSTFIX_EXPRESSION)


State 28

    7 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION '[' EXPRESSION ']' .

    $default  reduce using rule 7 (POSTFIX_EXPRESSION)


State 29

    4 ARGUMENT_EXPRESSION_LIST: ARGUMENT_EXPRESSION_LIST ',' ASSIGNMENT_EXPRESSION .

    $default  reduce using rule 4 (ARGUMENT_EXPRESSION_LIST)
