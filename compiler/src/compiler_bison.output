Terminals unused in grammar

   T_STRING
   T_PLUSPLUS
   T_MINUSMINUS
   T_EQUAL_TO
   T_NOT_EQUAL_TO
   T_LESS_THAN_EQUAL
   T_MORE_THAN_EQUAL
   T_AND
   T_OR
   T_LEFT_SHIFT
   T_RIGHT_SHIFT
   T_PLUS_EQUAL
   T_MINUS_EQUAL
   T_TIMES_EQUAL
   T_DIVIDE_EQUAL
   T_MOD_EQUAL
   T_LEFT_SHIFT_EQUAL
   T_RIGHT_SHIFT_EQUAL
   T_B_AND_EQUAL
   T_XOR_EQUAL
   T_B_OR_EQUAL
   T_ARROW
   T_BREAK
   T_BOOL
   T_CASE
   T_CHAR
   T_CONST
   T_CONTINUE
   T_DEFAULT
   T_DO
   T_DOUBLE
   T_ELSE
   T_ENUM
   T_FLOAT
   T_FOR
   T_GOTO
   T_IF
   T_INT
   T_LONG
   T_REGISTER
   T_RETURN
   T_SHORT
   T_SIGNED
   T_SIZEOF
   T_STATIC
   T_STRUCT
   T_SWITCH
   T_TYPEDEF
   T_UNION
   T_UNSIGNED
   T_VOID
   T_WHILE
   T_NUMBER


Grammar

    0 $accept: ROOT $end

    1 ROOT: TOP

    2 TOP: DECLARATION
    3    | TOP DECLARATION

    4 DECLARATION: T_WORD T_WORD ';'


Terminals, with rules where they appear

$end (0) 0
';' (59) 4
error (256)
T_STRING <string> (258)
T_PLUSPLUS (259)
T_MINUSMINUS (260)
T_EQUAL_TO (261)
T_NOT_EQUAL_TO (262)
T_LESS_THAN_EQUAL (263)
T_MORE_THAN_EQUAL (264)
T_AND (265)
T_OR (266)
T_LEFT_SHIFT (267)
T_RIGHT_SHIFT (268)
T_PLUS_EQUAL (269)
T_MINUS_EQUAL (270)
T_TIMES_EQUAL (271)
T_DIVIDE_EQUAL (272)
T_MOD_EQUAL (273)
T_LEFT_SHIFT_EQUAL (274)
T_RIGHT_SHIFT_EQUAL (275)
T_B_AND_EQUAL (276)
T_XOR_EQUAL (277)
T_B_OR_EQUAL (278)
T_ARROW (279)
T_BREAK (280)
T_BOOL (281)
T_CASE (282)
T_CHAR (283)
T_CONST (284)
T_CONTINUE (285)
T_DEFAULT (286)
T_DO (287)
T_DOUBLE (288)
T_ELSE (289)
T_ENUM (290)
T_FLOAT (291)
T_FOR (292)
T_GOTO (293)
T_IF (294)
T_INT (295)
T_LONG (296)
T_REGISTER (297)
T_RETURN (298)
T_SHORT (299)
T_SIGNED (300)
T_SIZEOF (301)
T_STATIC (302)
T_STRUCT (303)
T_SWITCH (304)
T_TYPEDEF (305)
T_UNION (306)
T_UNSIGNED (307)
T_VOID (308)
T_WHILE (309)
T_NUMBER <number> (310)
T_WORD <string> (311) 4


Nonterminals, with rules where they appear

$accept (58)
    on left: 0
ROOT (59)
    on left: 1, on right: 0
TOP <ast> (60)
    on left: 2 3, on right: 1 3
DECLARATION <toplevel> (61)
    on left: 4, on right: 2 3


State 0

    0 $accept: . ROOT $end

    T_WORD  shift, and go to state 1

    ROOT         go to state 2
    TOP          go to state 3
    DECLARATION  go to state 4


State 1

    4 DECLARATION: T_WORD . T_WORD ';'

    T_WORD  shift, and go to state 5


State 2

    0 $accept: ROOT . $end

    $end  shift, and go to state 6


State 3

    1 ROOT: TOP .
    3 TOP: TOP . DECLARATION

    T_WORD  shift, and go to state 1

    $default  reduce using rule 1 (ROOT)

    DECLARATION  go to state 7


State 4

    2 TOP: DECLARATION .

    $default  reduce using rule 2 (TOP)


State 5

    4 DECLARATION: T_WORD T_WORD . ';'

    ';'  shift, and go to state 8


State 6

    0 $accept: ROOT $end .

    $default  accept


State 7

    3 TOP: TOP DECLARATION .

    $default  reduce using rule 3 (TOP)


State 8

    4 DECLARATION: T_WORD T_WORD ';' .

    $default  reduce using rule 4 (DECLARATION)
